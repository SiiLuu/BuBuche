{"ast":null,"code":"var _jsxFileName = \"/home/FIXFEDODO/personal/bubuche/src/components/AutoSwipe/SlideShow.js\";\nimport React, { Component } from \"react\";\nimport Slide from \"./Slide\";\nimport Dots from \"./Dots\";\nconst s = {\n  container: \"fullW fullH rel overflowH\",\n  onScreen: \"left0\",\n  offScreenRight: \"left100vw\",\n  offScreenLeft: \"leftM100vw\",\n  transition: \"transition1l\"\n};\n\nclass Slideshow extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startCarousel = () => {\n      this.carouselInterval = setInterval(() => {\n        this.transitionSlides();\n      }, 4000);\n    };\n\n    this.setSlideState = (slide1, slide2, currentId) => {\n      this.setState({\n        slide1: slide1,\n        slide2: slide2,\n        currentId: currentId\n      });\n    };\n\n    this.transitionSlides = () => {\n      const {\n        slide1,\n        slide2\n      } = this.state;\n      let currentId;\n\n      if (slide1[\"position\"] === s.onScreen) {\n        slide1[\"position\"] = s.offScreenLeft;\n        slide2[\"position\"] = s.onScreen;\n        currentId = slide2.id;\n      } else {\n        slide1[\"position\"] = s.onScreen;\n        slide2[\"position\"] = s.offScreenLeft;\n        currentId = slide1.id;\n      }\n\n      this.setSlideState(slide1, slide2, currentId);\n      setTimeout(() => {\n        this.resetSlideOffScreen();\n      }, 1000);\n    };\n\n    this.resetSlideOffScreen = () => {\n      const {\n        slide1,\n        slide2,\n        currentId\n      } = this.state;\n      const {\n        slides\n      } = this.props;\n\n      if (slide1[\"position\"] === s.offScreenLeft) {\n        slide1[\"transition\"] = false;\n        slide1[\"position\"] = s.offScreenRight;\n        slide1[\"id\"] = slide2.id + 1 === slides.length ? 0 : slide2.id + 1;\n      } else {\n        slide2[\"transition\"] = false;\n        slide2[\"position\"] = s.offScreenRight;\n        slide2[\"id\"] = slide1.id + 1 === slides.length ? 0 : slide1.id + 1;\n      }\n\n      this.setSlideState(slide1, slide2, currentId);\n      this.resetSlideTransitions(slide1, slide2, currentId);\n    };\n\n    this.resetSlideTransitions = (slide1, slide2, currentId) => {\n      setTimeout(() => {\n        slide1[\"transition\"] = true;\n        slide2[\"transition\"] = true;\n        this.setSlideState(slide1, slide2, currentId);\n      }, 500);\n    };\n\n    this.state = {\n      slide1: {\n        id: 0,\n        position: s.onScreen,\n        transition: true\n      },\n      slide2: {\n        id: 1,\n        position: s.offScreenRight,\n        transition: true\n      },\n      currentId: 0\n    };\n  }\n\n  componentDidMount() {\n    this.startCarousel();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.carouselInterval);\n  }\n\n  render() {\n    const {\n      slide1,\n      slide2,\n      currentId\n    } = this.state;\n    const {\n      slides\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: s.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Slide, {\n      image: slides[slide1.id],\n      position: slide1.position,\n      transition: slide1.transition ? s.transition : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Slide, {\n      image: slides[slide2.id],\n      position: slide2.position,\n      transition: slide2.transition ? s.transition : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Dots, {\n      slideId: currentId,\n      slides: slides,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Slideshow;","map":{"version":3,"sources":["/home/FIXFEDODO/personal/bubuche/src/components/AutoSwipe/SlideShow.js"],"names":["React","Component","Slide","Dots","s","container","onScreen","offScreenRight","offScreenLeft","transition","Slideshow","constructor","props","startCarousel","carouselInterval","setInterval","transitionSlides","setSlideState","slide1","slide2","currentId","setState","state","id","setTimeout","resetSlideOffScreen","slides","length","resetSlideTransitions","position","componentDidMount","componentWillUnmount","clearInterval","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Slide from \"./Slide\";\nimport Dots from \"./Dots\";\n\nconst s = {\n    container: \"fullW fullH rel overflowH\",\n    onScreen: \"left0\",\n    offScreenRight: \"left100vw\",\n    offScreenLeft: \"leftM100vw\",\n    transition: \"transition1l\"\n};\n\nclass Slideshow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            slide1: {\n                id: 0,\n                position: s.onScreen,\n                transition: true\n            },\n            slide2: {\n                id: 1,\n                position: s.offScreenRight,\n                transition: true\n            },\n            currentId: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startCarousel();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.carouselInterval);\n    }\n\n    startCarousel = () => {\n        this.carouselInterval = setInterval(() => {\n            this.transitionSlides();\n        }, 4000);\n    };\n\n    setSlideState = (slide1, slide2, currentId) => {\n        this.setState({\n            slide1: slide1,\n            slide2: slide2,\n            currentId: currentId\n        });\n    };\n\n    transitionSlides = () => {\n        const { slide1, slide2 } = this.state;\n        let currentId;\n        if (slide1[\"position\"] === s.onScreen) {\n            slide1[\"position\"] = s.offScreenLeft;\n            slide2[\"position\"] = s.onScreen;\n            currentId = slide2.id;\n        } else {\n            slide1[\"position\"] = s.onScreen;\n            slide2[\"position\"] = s.offScreenLeft;\n            currentId = slide1.id;\n        }\n        this.setSlideState(slide1, slide2, currentId);\n        setTimeout(() => {\n            this.resetSlideOffScreen();\n        }, 1000);\n    };\n\n    resetSlideOffScreen = () => {\n        const { slide1, slide2, currentId } = this.state;\n        const { slides } = this.props;\n        if (slide1[\"position\"] === s.offScreenLeft) {\n            slide1[\"transition\"] = false;\n            slide1[\"position\"] = s.offScreenRight;\n            slide1[\"id\"] = slide2.id + 1 === slides.length ? 0 : slide2.id + 1;\n        } else {\n            slide2[\"transition\"] = false;\n            slide2[\"position\"] = s.offScreenRight;\n            slide2[\"id\"] = slide1.id + 1 === slides.length ? 0 : slide1.id + 1;\n        }\n        this.setSlideState(slide1, slide2, currentId);\n        this.resetSlideTransitions(slide1, slide2, currentId);\n    };\n\n    resetSlideTransitions = (slide1, slide2, currentId) => {\n        setTimeout(() => {\n            slide1[\"transition\"] = true;\n            slide2[\"transition\"] = true;\n            this.setSlideState(slide1, slide2, currentId);\n        }, 500);\n    };\n\n    render() {\n        const { slide1, slide2, currentId } = this.state;\n        const { slides } = this.props;\n        return (\n            <div className={s.container}>\n                <Slide\n                    image={slides[slide1.id]}\n                    position={slide1.position}\n                    transition={slide1.transition ? s.transition : \"\"}\n                />\n                <Slide\n                    image={slides[slide2.id]}\n                    position={slide2.position}\n                    transition={slide2.transition ? s.transition : \"\"}\n                />\n                <Dots slideId={currentId} slides={slides} />\n            </div>\n        );\n    }\n}\n\nexport default Slideshow;"]},"metadata":{},"sourceType":"module"}